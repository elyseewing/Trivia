define([
  'jQuery',
  'Underscore',
  'Backbone',
  'models/questions',
  'collections/questions',
  'text!templates/questions/show.html'
], function($, _, Backbone, questionsModel, questionsCollection, questionShowTemplate) {
  var questionShowView = Backbone.View.extend({
    el: $("#page"), 
    initialize: function() {

    }, 
    render: function(id) {
      var data = {
        model: questionsCollection.get(id), 
	_: _
      };
      var compiledTemplate = _.template(questionShowTemplate, data);
      $("#page").html(compiledTemplate);
    }, 

    events: {
      "click .new":"newQuestion",
      "click .save":"saveQuestion"
    },

    newQuestion: function(event) {
      var data = { model: new questionsModel(), _: _ };
      var compiledTemplate = _.template(questionShowTemplate, data);
      $('#page').html(compiledTemplate);
    },

    saveQuestion: function() {
      var newText = $('#question').val();
      var questionID = $('#id').val();
      if (questionID > 0)
      {
        var model = questionsCollection.get(questionID);
	model.set({ question: newText });
      } else { 
        var model = new questionsModel( { question: newText } );
      
      if (model.isNew()) {
	var attributes = { question: newText };

	var options = {

	};

        questionsCollection.create(model, 
          { 
	    success: function() {
	      alert("Success");
	    }, 
	    error: function(model, error) {
	      alert("Failed - " + error.length);
	      //alert(errors.join("\\n"));
	    }
          }
        );
      } else {
	var attributes = { question: newText };
        
	var options = {
	  success: function() { alert("Question was updated."); },

	  error: function(model, errors) {
	    alert(errors.join("\\n"));
	    return false;
	  }
	};

	model.save(attributes, options);
      }
      return false;
    }

  });
  return new questionShowView;
});
